```{r}
#| label: medtabfunc
#| cache: true
#| cache.comments: false

medtabfunc_inner <- function(x, data, stratavar, catdig, contdig) {
  tmp <- data %>%
    filter(!is.na(!!sym(x)) & !is.na(!!sym(stratavar)))

  cl <- class(data %>% pull(!!sym(x)))
  if (cl %in% c("character", "factor")) {
    out <- tmp %>%
      group_by(!!sym(stratavar), .drop = F) %>%
      count(!!sym(x), .drop = F) %>%
      mutate(
        out = paste0(n, " (", fn(n / sum(n) * 100, catdig), ")"),
        out = case_when(
          sum(n) == 0 ~ "-",
          n < 10 ~ "<10",
          TRUE ~ out
        ),
        level = !!sym(x)
      ) %>%
      ungroup() %>%
      select(!!sym(stratavar), out, level) %>%
      pivot_wider(names_from = !!sym(stratavar), values_from = out)

    # p-value
    check <- tmp %>%
      count(!!sym(stratavar), !is.na(!!sym(x)))
    if (nrow(check) >= 2) {
      p <- fn(chisq.test(tmp %>% pull(!!sym(stratavar)), tmp %>% pull(!!sym(x)))$p.value, p = T, dig = 3)
    } else {
      p <- "-"
    }
    out <- out %>%
      mutate(
        var = NA,
        p = NA
      )
    out <- out %>% add_row(
      var = x,
      p = p,
      .before = 1
    )
  } else if (cl %in% c("numeric", "integer")) {
    tmp <- data %>%
      filter(!is.na(!!sym(x)) & !is.na(!!sym(stratavar)))
    out <- tmp %>%
      group_by(!!sym(stratavar), .drop = F) %>%
      reframe(
        med = quantile(!!sym(x), na.rm = T, probs = c(0.5)),
        q1 = quantile(!!sym(x), na.rm = T, probs = c(0.25)),
        q3 = quantile(!!sym(x), na.rm = T, probs = c(0.75)),
        n = n()
      ) %>%
      mutate(
        out = paste0(fn(med, contdig), " [", fn(q1, contdig), "-", fn(q3, contdig), "]"),
        out = case_when(
          n == 0 ~ "-",
          n < 10 ~ "<10",
          TRUE ~ out
        )
      ) %>%
      ungroup() %>%
      select(!!sym(stratavar), out) %>%
      pivot_wider(names_from = !!sym(stratavar), values_from = out)

    # p-value
    check <- tmp %>%
      count(!!sym(stratavar), !is.na(!!sym(x)))
    if (nrow(check) >= 2) {
      p <- fn(kruskal.test(formula(paste0(x, " ~ ", stratavar)), data = tmp)$p.value, p = T, dig = 3)
    } else {
      p <- "-"
    }

    out <- out %>%
      mutate(
        var = x,
        p = p
      )
  } else {
    stop("Unknown class in baseline table")
  }
}

contdig <- 0
catdig <- 0

medvarsbase <- c(
  "sos_lm_bbl1", "bbl_1",
  "sos_lm_rasiarni1", "rasiarni_1",
  "sos_lm_mra1", "mra_1",
  "sos_lm_loop1", "loop_1"
)
medvarsfu <- c(
  "sos_lm_bbl2", "bbl_2",
  "sos_lm_rasiarni2", "rasiarni_2",
  "sos_lm_mra2", "mra_2",
  "sos_lm_loop2", "loop_2"
)

medtabfunc <- function(data) {
  tabbase <- lapply(medvarsbase,
    FUN = medtabfunc_inner, data = data,
    stratavar = "crt", catdig = catdig, contdig = contdig
  )
  tabbase <- bind_rows(tabbase) %>%
    select(var, level, "No CRT", CRT, p)

  tabfu <- lapply(medvarsfu,
    FUN = medtabfunc_inner, data = data,
    stratavar = "crt", catdig = catdig, contdig = contdig
  )
  tabfu <- bind_rows(tabfu) %>%
    select("No CRT", CRT, p)

  tabboth <- bind_cols(tabbase, tabfu) %>%
    mutate(
      var = case_when(
        var == "sos_lm_bbl1" ~ "Beta-blocker target dose (%)",
        var == "sos_lm_rasiarni1" ~ "ACEi/ARB/ARNi target dose (%)",
        var == "sos_lm_mra1" ~ "MRA target dose (%)",
        var == "sos_lm_loop1" ~ "Loop diuretic Furosemide equivalent (mg)",
        var == "loop_1" ~ "  Median [q1-q3]",
        !is.na(var) ~ "  Median [q1-q3]"
      ),
      var = if_else(!is.na(level) & !is.na(var),
        paste0(var, " ", level),
        coalesce(var, paste0("  ", level))
      )
    ) %>%
    select(-level)

  cn <- c("Variable", rep(c(levels(rsdata %>% pull(crt)), "p-value"), 2))

  # excel
  make_one_xlsxsheet(tabboth, colnames = cn)

  cn <- sanitize_text(cn)

  tabboth <- tabboth %>%
    mutate(
      var = sanitize_text(var),
      var = str_replace_all(var, fixed("$>$="), "$\\geq$"),
      var = str_replace_all(var, fixed("$<$="), "$\\leq$")
    )

  indent_rows <- tabboth %>%
    mutate(
      indent_rows = str_detect(var, "  "),
      rows = row_number()
    ) %>%
    filter(indent_rows) %>%
    pull(rows)

  default_kable(tabboth,
    escape = FALSE,
    col.names = cn
  ) %>%
    add_indent(indent_rows) %>%
    footnote(
      footnote_order = c("general", "symbol", "alphabet"),
      general_title = "",
      general = c(
        "Categorical variables are presented with n (%) and tested with chi-square test and continuous variables with median [q1-q3] and tested with Kruskal-Wallis test."
      ),
      threeparttable = T
    ) %>%
    add_header_above(c(" " = 1, "Baseline" = 3, "1.5 year follow-up" = 3))
}
```

```{r}
#| label: tbl-med
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic"
#| tbl-pos: "H"

medtabfunc(data = rsdata)
```

```{r}
#| label: tbl-med-hypobp
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic - systolic blood pressure < 110 (mmHg)"
#| tbl-pos: "H"

medtabfunc(data = rsdata %>% filter(shf_bpsys_cat == "<110" & !is.na(shf_bpsys_cat)))
```

```{r}
#| label: tbl-med-durhf1
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic - duration of HF 3-9 (months)"
#| tbl-pos: "H"

medtabfunc(data = rsdata %>% filter(sos_durationhf_cat == "3-9"))
```

```{r}
#| label: tbl-med-durhf2
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic - duration of HF 10-18 (months)"
#| tbl-pos: "H"

medtabfunc(data = rsdata %>% filter(sos_durationhf_cat == "10-18"))
```

```{r}
#| label: tbl-med-durhf3
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic - duration of HF >= 19 (months)"
#| tbl-pos: "H"

medtabfunc(data = rsdata %>% filter(sos_durationhf_cat == ">=19"))
```

```{r}
#| label: tbl-med-sensclassi
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic - sensitivity analyses Class I recommendation according to 2021 guidelines"
#| tbl-pos: "H"

medtabfunc(data = rsdata %>% filter(senspop))
```

```{r}
#| label: tbl-med-excontrols
#| cache: true
#| cache.comments: false
#| dependson: medtabfunc
#| tbl-cap: "Use of GDMT and loop diuretic - sensitivity analyses excluding controls who recieved CRT during follow-up"
#| tbl-pos: "H"

medtabfunc(data = rsdata %>% filter(senscrtfu))
```
